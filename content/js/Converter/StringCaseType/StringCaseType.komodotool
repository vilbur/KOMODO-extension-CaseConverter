{"keyboard_shortcut":"","name":"StringCaseType","language":"JavaScript","trigger_enabled":false,"value":["/** Get case type of string\r"," *\r"," * @param\tstring\tstring\r"," * @return\tstring\tCase type of string\r"," */\r","(function()\r","{\r","\tfunction StringCaseType()\r","\t{\t\t\r","\t\tvar string\t= '';\t\t\r","\t\tvar words\t= [];\r","\t\t\r","\t\tvar snake_or_kebab\t= '';\r","\t\t\r","\t\tvar case_types = [\r","\t\t\t'lower',\r","\t\t\t'upper',\r","\t\t\t'capital',\r","\t\t\t'title',\r","\t\t\t'camel',\r","\t\t\t'pascal',\r","\t\t];\r","\t\t\t\t/** Test\r","\t\t */\r","\t\tthis.test = function()\r","\t\t{\r","\t\t\talert('StringCaseType');\r","\t\t};\r","\t\t/*---------------------------------------\r","\t\t\tBASE CASE\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Get type of string\r","\t\t * @return\tstring\tType of string E.g.: C\r","\t\t */\r","\t\tthis.getStringType = function(_string)\r","\t\t{\r","\t\t\tstring = _string;\r","\t\t\tsetSnakeOrKebab();\r","\t\t\tsanitizeString();\r","\t\t\t\r","\t\t\twords\t= string.split(/\\s/g);\r","\r","\t\t\t/** concat type name\r","\t\t\t * @return\tstring\tE.G.: 'Capital snake case'\r","\t\t\t */\r","\t\t\tvar concatTypeName = function(case_type)\r","\t\t\t{\r","\t\t\t\treturn capitalize( (snake_or_kebab? snake_or_kebab+' ' : '') + case_type );\r","\t\t\t};\r","\t\t\t\r","\t\t\tfor(var c=0; c<case_types.length;c++)\r","\t\t\t\tif( this[method(case_types[c])]() )\r","\t\t\t\t\treturn concatTypeName(case_types[c]);\r","\t\t};\r","\t\t/*---------------------------------------\r","\t\t\tSTRING TEST\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Match string which has not lower case\r","\t\t */\r","\t\tthis.isLowerCase = function()\r","\t\t{\r","\t\t\treturn string.match(/[A-Z]/g)===null;\r","\t\t}; \r","\t\t/** Match string which has not upper case\r","\t\t */\r","\t\tthis.isUpperCase = function()\r","\t\t{\r","\t\t\treturn string.match(/[a-z]/g)===null;\r","\t\t}; \r","\t\t/** If only first word is capital\r","\t\t */\r","\t\tthis.isCapitalCase = function()\r","\t\t{\r","\t\t\tvar is_capital\t= false;\r","\t\t\t\r","\t\t\tfor(var w=0; w<words.length;w++)\r","\t\t\t\tif( isCapitalWord(words[w]) && w===0 )\r","\t\t\t\t\tis_capital = true;\r","\t\t\t\t\t\r","\t\t\t\telse if( ! isLowerCaseWord(words[w]) )\r","\t\t\t\t\tis_capital = false;\r","\t\t\t\t\r","\t\t\treturn is_capital;\r","\t\t}; \r","\t\t/** If all words are capital\r","\t\t */\r","\t\tthis.isTitleCase = function()\r","\t\t{\r","\t\t\tvar is_title\t= true;\r","\t\t\t\r","\t\t\tfor(var w=0; w<words.length;w++)\r","\t\t\t\tif( ! isCapitalWord(words[w]) )\r","\t\t\t\t\tis_title = false;\r","\r","\t\t\treturn is_title;\r","\t\t};\r","\t\t/** isCamelCase\r","\t\t */\r","\t\tthis.isCamelCase = function()\r","\t\t{\r","\t\t\treturn string.match(/^[^A-Z][^A-Z]*(([A-Z][^A-Z]*)+)$/g)!==null;\r","\t\t}; \r","\t\t/** isPascalCase\r","\t\t */\r","\t\tthis.isPascalCase = function()\r","\t\t{\r","\t\t\treturn  string.match(/^[A-z]+$/gi)!==null && string.match(/^[A-Z][^A-Z]+(([A-Z][^A-Z]*)+)$/g)!==null;\r","\t\t}; \r","\t\t\r","\t\t/*---------------------------------------\r","\t\t\tPRIVATE\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** setSnakeOrKebab\r","\t\t */\r","\t\tvar setSnakeOrKebab = function()\r","\t\t{\r","\t\t\tsnake_or_kebab = string.match(/_/gi) ? 'snake' : (string.match(/-/gi) ? 'kebab' : ''); \r","\t\t};\r","\t\t/** Replace '_' and '-' with whitespace ' '\r","\t\t */\r","\t\tvar sanitizeString = function()\r","\t\t{\r","\t\t\tstring\t= string.replace(/[-_]+/gi, ' ').replace(/\\s+/gi, ' ').trim(); \r","\t\t}; \r","\t\t/*---------------------------------------\r","\t\t\tWORD TETS\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** \r","\t\t */\r","\t\tvar isCapitalWord = function(word)\r","\t\t{\r","\t\t\treturn word.match(/^[A-Z][^A-Z]*$/g);\r","\t\t}; \r","\t\t/** \r","\t\t */\r","\t\tvar isLowerCaseWord = function(word)\r","\t\t{\r","\t\t\treturn word.match(/[A-Z]/g)===null;\r","\t\t};\r","\t\t/*---------------------------------------\r","\t\t\tHELPERS\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Get method in this object by case type\r","\t\t * @example 'isCamelCase'\r","\t\t */\r","\t\tvar method = function(case_type)\r","\t\t{\r","\t\t\treturn 'is'+capitalize(case_type)+'Case';\r","\t\t}; \r","\t\t/** capitalize\r","\t\t */\r","\t\tvar capitalize = function(string)\r","\t\t{\r","\t\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\r","\t\t};\r","\r","\t}\r","\treturn StringCaseType;\r","\r","})().apply(ko.extensions.CaseConverter.Converter.StringCaseType);"],"trigger":"trigger_postopen","rank":100,"version":"1.0.12","async":false,"type":"macro","icon":"chrome://famfamfamsilk/skin/icons/text_uppercase.png"}